@_exported import Foundation

@available(iOS 2.0, *)
@MainActor class UIBarItem : NSObject, NSCoding, UIAppearance {
  init()
  init?(coder: NSCoder)
  var isEnabled: Bool
  @available(swift, obsoleted: 3, renamed: "isEnabled")
  var enabled: Bool
  var title: String?
  var image: UIImage?
  @available(iOS 5.0, *)
  var landscapeImagePhone: UIImage?
  @available(iOS 11.0, *)
  var largeContentSizeImage: UIImage?
  var imageInsets: UIEdgeInsets
  @available(iOS 5.0, *)
  var landscapeImagePhoneInsets: UIEdgeInsets
  @available(iOS 11.0, *)
  var largeContentSizeImageInsets: UIEdgeInsets
  var tag: Int
  @available(iOS 5.0, *)
  func setTitleTextAttributes(_ attributes: [NSAttributedString.Key : Any]?, forState state: UIControlState)
  @available(iOS 5.0, *)
  func titleTextAttributes(forState state: UIControlState) -> [NSAttributedString.Key : Any]?
  @available(iOS 5.0, *)
  @available(swift, obsoleted: 3, renamed: "titleTextAttributes(forState:)")
  func titleTextAttributesForState(_ state: UIControlState) -> [NSAttributedString.Key : Any]?
  @available(iOS 2.0, *)
  func encode(with coder: NSCoder)
  @available(iOS 2.0, *)
  class func appearance() -> Self
  @available(iOS 9.0, *)
  class func appearance(whenContainedInInstancesOf containerTypes: [UIAppearanceContainer.Type]) -> Self
  @available(iOS 8.0, *)
  class func appearance(for trait: UITraitCollection) -> Self
  @available(iOS 9.0, *)
  class func appearance(for trait: UITraitCollection, whenContainedInInstancesOf containerTypes: [UIAppearanceContainer.Type]) -> Self
}
