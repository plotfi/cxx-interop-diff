@_exported import Foundation

typealias UICloudSharingPermissionOptions = Int
var UICloudSharingPermissionStandard: Int { get }
var UICloudSharingPermissionAllowPublic: Int { get }
var UICloudSharingPermissionAllowPrivate: Int { get }
var UICloudSharingPermissionAllowReadOnly: Int { get }
var UICloudSharingPermissionAllowReadWrite: Int { get }
@MainActor protocol UICloudSharingControllerDelegate : NSObjectProtocol {
  @available(iOS 10.0, *)
  func cloudSharingController(_ csc: UICloudSharingController, failedToSaveShareWithError error: Error)
  @available(iOS 10.0, *)
  func itemTitle(for csc: UICloudSharingController) -> String?
  @available(swift, obsoleted: 3, renamed: "itemTitle(for:)")
  func itemTitleForCloudSharingController(_ csc: UICloudSharingController) -> String?
  @available(iOS 10.0, *)
  optional func itemThumbnailData(for csc: UICloudSharingController) -> Data?
  @available(swift, obsoleted: 3, renamed: "itemThumbnailData(for:)")
  optional func itemThumbnailDataForCloudSharingController(_ csc: UICloudSharingController) -> Data?
  @available(iOS 10.0, *)
  optional func itemType(for csc: UICloudSharingController) -> String?
  @available(swift, obsoleted: 3, renamed: "itemType(for:)")
  optional func itemTypeForCloudSharingController(_ csc: UICloudSharingController) -> String?
  @available(iOS 10.0, *)
  optional func cloudSharingControllerDidSaveShare(_ csc: UICloudSharingController)
  @available(iOS 10.0, *)
  optional func cloudSharingControllerDidStopSharing(_ csc: UICloudSharingController)
}
@available(iOS 10.0, *)
@MainActor class UICloudSharingController : UIViewController {
  @available(*, unavailable)
  init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  @available(*, unavailable)
  init?(coder: NSCoder)
  weak var delegate: @sil_weak UICloudSharingControllerDelegate?
  var availablePermissions: UICloudSharingPermissionOptions
  func activityItemSource() -> UIActivityItemSource
  convenience init()
}
