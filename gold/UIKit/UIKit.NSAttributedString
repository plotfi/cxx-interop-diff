@_exported import Foundation


/************************ Attributes ************************/
@available(iOS 6.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.font")
let NSFontAttributeName: NSAttributedString.Key
extension NSAttributedString.Key {

  /************************ Attributes ************************/
  @available(iOS 6.0, *)
  static let font: NSAttributedString.Key

  /************************ Attributes ************************/
  @available(iOS 6.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.font")
  static let NSFontAttributeName: NSAttributedString.Key
  @available(iOS 6.0, *)
  static let paragraphStyle: NSAttributedString.Key
  @available(iOS 6.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.paragraphStyle")
  static let NSParagraphStyleAttributeName: NSAttributedString.Key
  @available(iOS 6.0, *)
  static let foregroundColor: NSAttributedString.Key
  @available(iOS 6.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.foregroundColor")
  static let NSForegroundColorAttributeName: NSAttributedString.Key
  @available(iOS 6.0, *)
  static let backgroundColor: NSAttributedString.Key
  @available(iOS 6.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.backgroundColor")
  static let NSBackgroundColorAttributeName: NSAttributedString.Key
  @available(iOS 6.0, *)
  static let ligature: NSAttributedString.Key
  @available(iOS 6.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.ligature")
  static let NSLigatureAttributeName: NSAttributedString.Key
  @available(iOS 6.0, *)
  static let kern: NSAttributedString.Key
  @available(iOS 6.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.kern")
  static let NSKernAttributeName: NSAttributedString.Key
  @available(iOS 14.0, *)
  static let tracking: NSAttributedString.Key
  @available(iOS 6.0, *)
  static let strikethroughStyle: NSAttributedString.Key
  @available(iOS 6.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.strikethroughStyle")
  static let NSStrikethroughStyleAttributeName: NSAttributedString.Key
  @available(iOS 6.0, *)
  static let underlineStyle: NSAttributedString.Key
  @available(iOS 6.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.underlineStyle")
  static let NSUnderlineStyleAttributeName: NSAttributedString.Key
  @available(iOS 6.0, *)
  static let strokeColor: NSAttributedString.Key
  @available(iOS 6.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.strokeColor")
  static let NSStrokeColorAttributeName: NSAttributedString.Key
  @available(iOS 6.0, *)
  static let strokeWidth: NSAttributedString.Key
  @available(iOS 6.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.strokeWidth")
  static let NSStrokeWidthAttributeName: NSAttributedString.Key
  @available(iOS 6.0, *)
  static let shadow: NSAttributedString.Key
  @available(iOS 6.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.shadow")
  static let NSShadowAttributeName: NSAttributedString.Key
  @available(iOS 7.0, *)
  static let textEffect: NSAttributedString.Key
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.textEffect")
  static let NSTextEffectAttributeName: NSAttributedString.Key
  @available(iOS 7.0, *)
  static let attachment: NSAttributedString.Key
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.attachment")
  static let NSAttachmentAttributeName: NSAttributedString.Key
  @available(iOS 7.0, *)
  static let link: NSAttributedString.Key
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.link")
  static let NSLinkAttributeName: NSAttributedString.Key
  @available(iOS 7.0, *)
  static let baselineOffset: NSAttributedString.Key
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.baselineOffset")
  static let NSBaselineOffsetAttributeName: NSAttributedString.Key
  @available(iOS 7.0, *)
  static let underlineColor: NSAttributedString.Key
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.underlineColor")
  static let NSUnderlineColorAttributeName: NSAttributedString.Key
  @available(iOS 7.0, *)
  static let strikethroughColor: NSAttributedString.Key
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.strikethroughColor")
  static let NSStrikethroughColorAttributeName: NSAttributedString.Key
  @available(iOS 7.0, *)
  static let obliqueness: NSAttributedString.Key
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.obliqueness")
  static let NSObliquenessAttributeName: NSAttributedString.Key
  @available(iOS 7.0, *)
  static let expansion: NSAttributedString.Key
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.expansion")
  static let NSExpansionAttributeName: NSAttributedString.Key
  @available(iOS 7.0, *)
  static let writingDirection: NSAttributedString.Key
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.writingDirection")
  static let NSWritingDirectionAttributeName: NSAttributedString.Key
  @available(iOS 6.0, *)
  static let verticalGlyphForm: NSAttributedString.Key
  @available(iOS 6.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.Key.verticalGlyphForm")
  static let NSVerticalGlyphFormAttributeName: NSAttributedString.Key
}
@available(iOS 6.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.paragraphStyle")
let NSParagraphStyleAttributeName: NSAttributedString.Key
@available(iOS 6.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.foregroundColor")
let NSForegroundColorAttributeName: NSAttributedString.Key
@available(iOS 6.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.backgroundColor")
let NSBackgroundColorAttributeName: NSAttributedString.Key
@available(iOS 6.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.ligature")
let NSLigatureAttributeName: NSAttributedString.Key
@available(iOS 6.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.kern")
let NSKernAttributeName: NSAttributedString.Key
@available(iOS 14.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.tracking")
let NSTrackingAttributeName: NSAttributedString.Key
@available(iOS 6.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.strikethroughStyle")
let NSStrikethroughStyleAttributeName: NSAttributedString.Key
@available(iOS 6.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.underlineStyle")
let NSUnderlineStyleAttributeName: NSAttributedString.Key
@available(iOS 6.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.strokeColor")
let NSStrokeColorAttributeName: NSAttributedString.Key
@available(iOS 6.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.strokeWidth")
let NSStrokeWidthAttributeName: NSAttributedString.Key
@available(iOS 6.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.shadow")
let NSShadowAttributeName: NSAttributedString.Key
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.textEffect")
let NSTextEffectAttributeName: NSAttributedString.Key
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.attachment")
let NSAttachmentAttributeName: NSAttributedString.Key
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.link")
let NSLinkAttributeName: NSAttributedString.Key
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.baselineOffset")
let NSBaselineOffsetAttributeName: NSAttributedString.Key
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.underlineColor")
let NSUnderlineColorAttributeName: NSAttributedString.Key
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.strikethroughColor")
let NSStrikethroughColorAttributeName: NSAttributedString.Key
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.obliqueness")
let NSObliquenessAttributeName: NSAttributedString.Key
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.expansion")
let NSExpansionAttributeName: NSAttributedString.Key
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.writingDirection")
let NSWritingDirectionAttributeName: NSAttributedString.Key
@available(iOS 6.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.Key.verticalGlyphForm")
let NSVerticalGlyphFormAttributeName: NSAttributedString.Key

/************************ Attribute values ************************/
@available(*, unavailable, message: "Not available in Swift")
typealias NSUnderlineStyle = Int
@available(iOS 6.0, *)
struct NSUnderlineStyle : OptionSet, @unchecked Sendable {
  init(rawValue: Int)
  let rawValue: Int
  typealias RawValue = Int
  typealias Element = NSUnderlineStyle
  typealias ArrayLiteralElement = NSUnderlineStyle
  @available(*, unavailable, message: "use [] to construct an empty option set")
  static var none: NSUnderlineStyle { get }
  @available(swift, obsoleted: 4.2, renamed: "none")
  static var styleNone: NSUnderlineStyle { get }
  @available(*, unavailable, message: "use [] to construct an empty option set")
  @available(swift, obsoleted: 3, renamed: "none")
  static var None: NSUnderlineStyle { get }
  static var single: NSUnderlineStyle { get }
  @available(swift, obsoleted: 4.2, renamed: "single")
  static var styleSingle: NSUnderlineStyle { get }
  @available(swift, obsoleted: 3, renamed: "single")
  static var Single: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  static var thick: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4.2, renamed: "thick")
  static var styleThick: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 3, renamed: "thick")
  static var Thick: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  static var double: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4.2, renamed: "double")
  static var styleDouble: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 3, renamed: "double")
  static var Double: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  @available(*, unavailable, message: "use [] to construct an empty option set")
  static var patternSolid: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  @available(*, unavailable, message: "use [] to construct an empty option set")
  @available(swift, obsoleted: 3, renamed: "patternSolid")
  static var PatternSolid: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  static var patternDot: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 3, renamed: "patternDot")
  static var PatternDot: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  static var patternDash: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 3, renamed: "patternDash")
  static var PatternDash: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  static var patternDashDot: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 3, renamed: "patternDashDot")
  static var PatternDashDot: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  static var patternDashDotDot: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 3, renamed: "patternDashDotDot")
  static var PatternDashDotDot: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  static var byWord: NSUnderlineStyle { get }
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 3, renamed: "byWord")
  static var ByWord: NSUnderlineStyle { get }
}

@available(iOS 15, tvOS 15, watchOS 8, *)
extension NSUnderlineStyle : Hashable {
}
@available(iOS 9.0, *)
enum NSWritingDirectionFormatType : Int, @unchecked Sendable {
  init?(rawValue: Int)
  var rawValue: Int { get }
  typealias RawValue = Int
  case embedding
  @available(swift, obsoleted: 3, renamed: "embedding")
  static var Embedding: NSWritingDirectionFormatType { get }
  case override
  @available(swift, obsoleted: 3, renamed: "override")
  static var Override: NSWritingDirectionFormatType { get }
}
@available(swift, obsoleted: 3, renamed: "NSAttributedString.TextEffectStyle")
typealias NSTextEffectStyle = NSAttributedString.TextEffectStyle
extension NSAttributedString {
  struct TextEffectStyle : _ObjectiveCBridgeable, Hashable, Equatable, _SwiftNewtypeWrapper, RawRepresentable, @unchecked Sendable {
    init(rawValue: String)
    var _rawValue: NSString
    var rawValue: String { get }
    typealias RawValue = String
    typealias _ObjectiveCType = NSString
  }

  /************************ Document formats ************************/
  struct DocumentType : _ObjectiveCBridgeable, Hashable, Equatable, _SwiftNewtypeWrapper, RawRepresentable, @unchecked Sendable {
    init(_ rawValue: String)
    init(rawValue: String)
    var _rawValue: NSString
    var rawValue: String { get }
    typealias RawValue = String
    typealias _ObjectiveCType = NSString
  }
  struct TextLayoutSectionKey : _ObjectiveCBridgeable, Hashable, Equatable, _SwiftNewtypeWrapper, RawRepresentable, @unchecked Sendable {
    init(rawValue: String)
    var _rawValue: NSString
    var rawValue: String { get }
    typealias RawValue = String
    typealias _ObjectiveCType = NSString
  }
  struct DocumentAttributeKey : _ObjectiveCBridgeable, Hashable, Equatable, _SwiftNewtypeWrapper, RawRepresentable, @unchecked Sendable {
    init(_ rawValue: String)
    init(rawValue: String)
    var _rawValue: NSString
    var rawValue: String { get }
    typealias RawValue = String
    typealias _ObjectiveCType = NSString
  }
  struct DocumentReadingOptionKey : _ObjectiveCBridgeable, Hashable, Equatable, _SwiftNewtypeWrapper, RawRepresentable, @unchecked Sendable {
    init(_ rawValue: String)
    init(rawValue: String)
    var _rawValue: NSString
    var rawValue: String { get }
    typealias RawValue = String
    typealias _ObjectiveCType = NSString
  }
}
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.TextEffectStyle.letterpressStyle")
let NSTextEffectLetterpressStyle: NSAttributedString.TextEffectStyle
extension NSAttributedString.TextEffectStyle {
  @available(iOS 7.0, *)
  static let letterpressStyle: NSAttributedString.TextEffectStyle
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.TextEffectStyle.letterpressStyle")
  static let NSTextEffectLetterpressStyle: NSAttributedString.TextEffectStyle
}

/************************ Attribute fixing ************************/
extension NSMutableAttributedString {
  @available(iOS 7.0, *)
  func fixAttributes(in range: NSRange)
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 3, renamed: "fixAttributes(in:)")
  func fixAttributesInRange(_ range: NSRange)
}

/************************ Document formats ************************/
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentType")
typealias NSAttributedStringDocumentType = NSAttributedString.DocumentType
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentType.plain")
let NSPlainTextDocumentType: NSAttributedString.DocumentType
extension NSAttributedString.DocumentType {
  @available(iOS 7.0, *)
  static let plain: NSAttributedString.DocumentType
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentType.plain")
  static let NSPlainTextDocumentType: NSAttributedString.DocumentType
  @available(iOS 7.0, *)
  static let rtf: NSAttributedString.DocumentType
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentType.rtf")
  static let NSRTFTextDocumentType: NSAttributedString.DocumentType
  @available(iOS 7.0, *)
  static let rtfd: NSAttributedString.DocumentType
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentType.rtfd")
  static let NSRTFDTextDocumentType: NSAttributedString.DocumentType
  @available(iOS 7.0, *)
  static let html: NSAttributedString.DocumentType
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentType.html")
  static let NSHTMLTextDocumentType: NSAttributedString.DocumentType
}
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentType.rtf")
let NSRTFTextDocumentType: NSAttributedString.DocumentType
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentType.rtfd")
let NSRTFDTextDocumentType: NSAttributedString.DocumentType
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentType.html")
let NSHTMLTextDocumentType: NSAttributedString.DocumentType
@available(swift, obsoleted: 3, renamed: "NSAttributedString.TextLayoutSectionKey")
typealias NSTextLayoutSectionKey = NSAttributedString.TextLayoutSectionKey
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.TextLayoutSectionKey.orientation")
let NSTextLayoutSectionOrientation: NSAttributedString.TextLayoutSectionKey
extension NSAttributedString.TextLayoutSectionKey {
  @available(iOS 7.0, *)
  static let orientation: NSAttributedString.TextLayoutSectionKey
  @available(iOS 7.0, *)
  static let range: NSAttributedString.TextLayoutSectionKey
}
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.TextLayoutSectionKey.range")
let NSTextLayoutSectionRange: NSAttributedString.TextLayoutSectionKey
@available(iOS 13.0, *)
enum NSTextScalingType : Int, @unchecked Sendable {
  init?(rawValue: Int)
  var rawValue: Int { get }
  typealias RawValue = Int
  case standard
  @available(swift, obsoleted: 3, renamed: "standard")
  static var NSTextScalingStandard: NSTextScalingType { get }
  case iOS
  @available(swift, obsoleted: 3, renamed: "iOS")
  static var NSTextScalingiOS: NSTextScalingType { get }
}
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey")
typealias NSAttributedStringDocumentAttributeKey = NSAttributedString.DocumentAttributeKey
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.documentType")
let NSDocumentTypeDocumentAttribute: NSAttributedString.DocumentAttributeKey
extension NSAttributedString.DocumentAttributeKey {
  @available(iOS 7.0, *)
  static let documentType: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentAttributeKey.documentType")
  static let NSDocumentTypeDocumentAttribute: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  static let characterEncoding: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentAttributeKey.characterEncoding")
  static let NSCharacterEncodingDocumentAttribute: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  static let defaultAttributes: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentAttributeKey.defaultAttributes")
  static let NSDefaultAttributesDocumentAttribute: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  static let paperSize: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentAttributeKey.paperSize")
  static let NSPaperSizeDocumentAttribute: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  static let paperMargin: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentAttributeKey.paperMargin")
  static let NSPaperMarginDocumentAttribute: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  static let viewSize: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentAttributeKey.viewSize")
  static let NSViewSizeDocumentAttribute: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  static let viewZoom: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentAttributeKey.viewZoom")
  static let NSViewZoomDocumentAttribute: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  static let viewMode: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentAttributeKey.viewMode")
  static let NSViewModeDocumentAttribute: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  static let readOnly: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentAttributeKey.readOnly")
  static let NSReadOnlyDocumentAttribute: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  static let backgroundColor: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentAttributeKey.backgroundColor")
  static let NSBackgroundColorDocumentAttribute: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  static let hyphenationFactor: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentAttributeKey.hyphenationFactor")
  static let NSHyphenationFactorDocumentAttribute: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  static let defaultTabInterval: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentAttributeKey.defaultTabInterval")
  static let NSDefaultTabIntervalDocumentAttribute: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  static let textLayoutSections: NSAttributedString.DocumentAttributeKey
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 4, renamed: "NSAttributedString.DocumentAttributeKey.textLayoutSections")
  static let NSTextLayoutSectionsAttribute: NSAttributedString.DocumentAttributeKey
  @available(iOS 13.0, *)
  static let textScaling: NSAttributedString.DocumentAttributeKey
  @available(iOS 13.0, *)
  static let sourceTextScaling: NSAttributedString.DocumentAttributeKey
  @available(iOS 13.0, *)
  static let cocoaVersionDocumentAttribute: NSAttributedString.DocumentAttributeKey
}
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.characterEncoding")
let NSCharacterEncodingDocumentAttribute: NSAttributedString.DocumentAttributeKey
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.defaultAttributes")
let NSDefaultAttributesDocumentAttribute: NSAttributedString.DocumentAttributeKey
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.paperSize")
let NSPaperSizeDocumentAttribute: NSAttributedString.DocumentAttributeKey
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.paperMargin")
let NSPaperMarginDocumentAttribute: NSAttributedString.DocumentAttributeKey
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.viewSize")
let NSViewSizeDocumentAttribute: NSAttributedString.DocumentAttributeKey
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.viewZoom")
let NSViewZoomDocumentAttribute: NSAttributedString.DocumentAttributeKey
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.viewMode")
let NSViewModeDocumentAttribute: NSAttributedString.DocumentAttributeKey
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.readOnly")
let NSReadOnlyDocumentAttribute: NSAttributedString.DocumentAttributeKey
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.backgroundColor")
let NSBackgroundColorDocumentAttribute: NSAttributedString.DocumentAttributeKey
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.hyphenationFactor")
let NSHyphenationFactorDocumentAttribute: NSAttributedString.DocumentAttributeKey
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.defaultTabInterval")
let NSDefaultTabIntervalDocumentAttribute: NSAttributedString.DocumentAttributeKey
@available(iOS 7.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.textLayoutSections")
let NSTextLayoutSectionsAttribute: NSAttributedString.DocumentAttributeKey
@available(iOS 13.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.textScaling")
let NSTextScalingDocumentAttribute: NSAttributedString.DocumentAttributeKey
@available(iOS 13.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.sourceTextScaling")
let NSSourceTextScalingDocumentAttribute: NSAttributedString.DocumentAttributeKey
@available(iOS 13.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentAttributeKey.cocoaVersionDocumentAttribute")
let NSCocoaVersionDocumentAttribute: NSAttributedString.DocumentAttributeKey
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentReadingOptionKey")
typealias NSAttributedStringDocumentReadingOptionKey = NSAttributedString.DocumentReadingOptionKey
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentReadingOptionKey.documentType")
let NSDocumentTypeDocumentOption: NSAttributedString.DocumentReadingOptionKey
extension NSAttributedString.DocumentReadingOptionKey {
  static let documentType: NSAttributedString.DocumentReadingOptionKey
  static let defaultAttributes: NSAttributedString.DocumentReadingOptionKey
  static let characterEncoding: NSAttributedString.DocumentReadingOptionKey
  @available(iOS 13.0, *)
  static let targetTextScaling: NSAttributedString.DocumentReadingOptionKey
  @available(iOS 13.0, *)
  static let sourceTextScaling: NSAttributedString.DocumentReadingOptionKey
}
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentReadingOptionKey.defaultAttributes")
let NSDefaultAttributesDocumentOption: NSAttributedString.DocumentReadingOptionKey
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentReadingOptionKey.characterEncoding")
let NSCharacterEncodingDocumentOption: NSAttributedString.DocumentReadingOptionKey
@available(iOS 13.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentReadingOptionKey.targetTextScaling")
let NSTargetTextScalingDocumentOption: NSAttributedString.DocumentReadingOptionKey
@available(iOS 13.0, *)
@available(swift, obsoleted: 3, renamed: "NSAttributedString.DocumentReadingOptionKey.sourceTextScaling")
let NSSourceTextScalingDocumentOption: NSAttributedString.DocumentReadingOptionKey
extension NSAttributedString {
  @available(iOS 9.0, *)
  init(url: URL, options: [NSAttributedString.DocumentReadingOptionKey : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) throws
  @available(iOS 9.0, *)
  @available(swift, obsoleted: 3, renamed: "init(url:options:documentAttributes:)")
  init(URL url: URL, options: [NSAttributedString.DocumentReadingOptionKey : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) throws
  @available(iOS 7.0, *)
  init(data: Data, options: [NSAttributedString.DocumentReadingOptionKey : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) throws
  @available(iOS 7.0, *)
  func data(from range: NSRange, documentAttributes dict: [NSAttributedString.DocumentAttributeKey : Any] = [:]) throws -> Data
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 3, renamed: "data(from:documentAttributes:)")
  func dataFromRange(_ range: NSRange, documentAttributes dict: [NSAttributedString.DocumentAttributeKey : Any] = [:]) throws -> Data
  @available(iOS 7.0, *)
  func fileWrapper(from range: NSRange, documentAttributes dict: [NSAttributedString.DocumentAttributeKey : Any] = [:]) throws -> FileWrapper
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 3, renamed: "fileWrapper(from:documentAttributes:)")
  func fileWrapperFromRange(_ range: NSRange, documentAttributes dict: [NSAttributedString.DocumentAttributeKey : Any] = [:]) throws -> FileWrapper
}
extension NSMutableAttributedString {
  @available(iOS 9.0, *)
  func read(from url: URL, options opts: [NSAttributedString.DocumentReadingOptionKey : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) throws
  @available(iOS 9.0, *)
  @available(swift, obsoleted: 3, renamed: "read(from:options:documentAttributes:)")
  func readFromURL(_ url: URL, options opts: [NSAttributedString.DocumentReadingOptionKey : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) throws
  @available(iOS 7.0, *)
  func read(from data: Data, options opts: [NSAttributedString.DocumentReadingOptionKey : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) throws
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 3, renamed: "read(from:options:documentAttributes:)")
  func readFromData(_ data: Data, options opts: [NSAttributedString.DocumentReadingOptionKey : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) throws
}

/************************ Misc methods ************************/
extension NSAttributedString {
  @available(iOS 9.0, *)
  func containsAttachments(in range: NSRange) -> Bool
  @available(iOS 9.0, *)
  @available(swift, obsoleted: 3, renamed: "containsAttachments(in:)")
  func containsAttachmentsInRange(_ range: NSRange) -> Bool
}
extension NSAttributedString : NSItemProviderReading, NSItemProviderWriting {
  @available(iOS 11.0, *)
  class var readableTypeIdentifiersForItemProvider: [String] { get }
  @available(iOS 11.0, *)
  class var writableTypeIdentifiersForItemProvider: [String] { get }
  @available(iOS 11.0, *)
  var writableTypeIdentifiersForItemProvider: [String] { get }
  @available(iOS 11.0, *)
  class func object(withItemProviderData data: Data, typeIdentifier: String) throws -> Self
  @available(iOS 11.0, *)
  class func itemProviderVisibilityForRepresentation(withTypeIdentifier typeIdentifier: String) -> NSItemProviderRepresentationVisibility
  @available(iOS 11.0, *)
  func itemProviderVisibilityForRepresentation(withTypeIdentifier typeIdentifier: String) -> NSItemProviderRepresentationVisibility
  @available(iOS 11.0, *)
  func loadData(withTypeIdentifier typeIdentifier: String, forItemProviderCompletionHandler completionHandler: @escaping (Data?, Error?) -> Void) -> Progress?
}

/************************ Deprecated ************************/
@available(*, unavailable, message: "Not available in Swift")
let NSUnderlinePatternSolid: Int
@available(*, unavailable, message: "Not available in Swift")
let NSUnderlinePatternDot: Int
@available(*, unavailable, message: "Not available in Swift")
let NSUnderlinePatternDash: Int
@available(*, unavailable, message: "Not available in Swift")
let NSUnderlinePatternDashDot: Int
@available(*, unavailable, message: "Not available in Swift")
let NSUnderlinePatternDashDotDot: Int
@available(*, unavailable, message: "Not available in Swift")
let NSUnderlineByWord: Int
@available(iOS, introduced: 7.0, deprecated: 9.0, renamed: "NSWritingDirectionFormatType")
enum NSTextWritingDirection : Int, @unchecked Sendable {
  init?(rawValue: Int)
  var rawValue: Int { get }
  typealias RawValue = Int
  case embedding
  @available(swift, obsoleted: 3, renamed: "embedding")
  static var Embedding: NSTextWritingDirection { get }
  case override
  @available(swift, obsoleted: 3, renamed: "override")
  static var Override: NSTextWritingDirection { get }
}
extension NSAttributedString {
  @available(iOS, introduced: 7.0, deprecated: 9.0)
  init(fileURL url: URL, options: [AnyHashable : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) throws
}
extension NSMutableAttributedString {
  @available(iOS, introduced: 7.0, deprecated: 9.0)
  func read(fromFileURL url: URL, options opts: [AnyHashable : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) throws
  @available(swift, obsoleted: 3, renamed: "read(fromFileURL:options:documentAttributes:)")
  @available(iOS, introduced: 7.0, deprecated: 9.0)
  func readFromFileURL(_ url: URL, options opts: [AnyHashable : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) throws
}
