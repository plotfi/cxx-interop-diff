@_exported import CoreFoundation

var __FOUNDATION_NSPOINTERFUNCTIONS__: Int32 { get }
@available(*, unavailable, message: "Not available in Swift")
typealias NSPointerFunctionsOptions = Int
@available(swift, obsoleted: 3, renamed: "NSPointerFunctions.Options")
typealias NSPointerFunctionsOptions = NSPointerFunctions.Options
extension NSPointerFunctions {
  struct Options : OptionSet, @unchecked Sendable {
    init(rawValue: UInt)
    let rawValue: UInt
    typealias RawValue = UInt
    typealias Element = NSPointerFunctions.Options
    typealias ArrayLiteralElement = NSPointerFunctions.Options
    @available(iOS 6.0, *)
    static var strongMemory: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    @available(*, unavailable, message: "use [] to construct an empty option set")
    @available(swift, obsoleted: 3, renamed: "strongMemory")
    static var StrongMemory: NSPointerFunctions.Options { get }
    @available(iOS, unavailable)
    static var zeroingWeakMemory: NSPointerFunctions.Options { get }
    @available(iOS, unavailable)
    @available(swift, obsoleted: 3, renamed: "zeroingWeakMemory")
    static var ZeroingWeakMemory: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    static var opaqueMemory: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    @available(swift, obsoleted: 3, renamed: "opaqueMemory")
    static var OpaqueMemory: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    static var mallocMemory: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    @available(swift, obsoleted: 3, renamed: "mallocMemory")
    static var MallocMemory: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    static var machVirtualMemory: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    @available(swift, obsoleted: 3, renamed: "machVirtualMemory")
    static var MachVirtualMemory: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    static var weakMemory: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    @available(swift, obsoleted: 3, renamed: "weakMemory")
    static var WeakMemory: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    static var objectPersonality: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    @available(*, unavailable, message: "use [] to construct an empty option set")
    @available(swift, obsoleted: 3, renamed: "objectPersonality")
    static var ObjectPersonality: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    static var opaquePersonality: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    @available(swift, obsoleted: 3, renamed: "opaquePersonality")
    static var OpaquePersonality: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    static var objectPointerPersonality: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    @available(swift, obsoleted: 3, renamed: "objectPointerPersonality")
    static var ObjectPointerPersonality: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    static var cStringPersonality: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    @available(swift, obsoleted: 3, renamed: "cStringPersonality")
    static var CStringPersonality: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    static var structPersonality: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    @available(swift, obsoleted: 3, renamed: "structPersonality")
    static var StructPersonality: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    static var integerPersonality: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    @available(swift, obsoleted: 3, renamed: "integerPersonality")
    static var IntegerPersonality: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    static var copyIn: NSPointerFunctions.Options { get }
    @available(iOS 6.0, *)
    @available(swift, obsoleted: 3, renamed: "copyIn")
    static var CopyIn: NSPointerFunctions.Options { get }
  }
}
@available(iOS 6.0, *)
class NSPointerFunctions : NSObject, NSCopying {
  init(options: NSPointerFunctions.Options = [])
  @available(*, unavailable, renamed: "init(options:)", message: "Not available in Swift")
  class func pointerFunctionsWithOptions(_ options: NSPointerFunctions.Options = []) -> NSPointerFunctions
  var hashFunction: (@convention(c) (UnsafeRawPointer, (@convention(c) (UnsafeRawPointer) -> Int)?) -> Int)?
  var isEqualFunction: (@convention(c) (UnsafeRawPointer, UnsafeRawPointer, (@convention(c) (UnsafeRawPointer) -> Int)?) -> ObjCBool)?
  var sizeFunction: (@convention(c) (UnsafeRawPointer) -> Int)?
  var descriptionFunction: (@convention(c) (UnsafeRawPointer) -> String?)?
  var relinquishFunction: (@convention(c) (UnsafeRawPointer, (@convention(c) (UnsafeRawPointer) -> Int)?) -> Void)?
  var acquireFunction: (@convention(c) (UnsafeRawPointer, (@convention(c) (UnsafeRawPointer) -> Int)?, ObjCBool) -> UnsafeMutableRawPointer)?
  @available(iOS, introduced: 2.0, deprecated: 10.0, message: "Garbage collection no longer supported")
  var usesStrongWriteBarrier: Bool
  @available(iOS, introduced: 2.0, deprecated: 10.0, message: "Garbage collection no longer supported")
  var usesWeakReadAndWriteBarriers: Bool
  convenience init()
  @available(iOS 6.0, *)
  func copy(with zone: NSZone? = nil) -> Any
}
