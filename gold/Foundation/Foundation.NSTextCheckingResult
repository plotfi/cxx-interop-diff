@_exported import CoreFoundation

@available(*, unavailable, message: "Not available in Swift")
typealias NSTextCheckingType = UInt64
struct NSTextCheckingType : OptionSet, @unchecked Sendable {
  init(rawValue: UInt64)
  let rawValue: UInt64
  typealias RawValue = UInt64
  typealias Element = NSTextCheckingType
  typealias ArrayLiteralElement = NSTextCheckingType
  static var orthography: NSTextCheckingType { get }
  @available(swift, obsoleted: 3, renamed: "orthography")
  static var Orthography: NSTextCheckingType { get }
  static var spelling: NSTextCheckingType { get }
  @available(swift, obsoleted: 3, renamed: "spelling")
  static var Spelling: NSTextCheckingType { get }
  static var grammar: NSTextCheckingType { get }
  @available(swift, obsoleted: 3, renamed: "grammar")
  static var Grammar: NSTextCheckingType { get }
  static var date: NSTextCheckingType { get }
  @available(swift, obsoleted: 3, renamed: "date")
  static var Date: NSTextCheckingType { get }
  static var address: NSTextCheckingType { get }
  @available(swift, obsoleted: 3, renamed: "address")
  static var Address: NSTextCheckingType { get }
  static var link: NSTextCheckingType { get }
  @available(swift, obsoleted: 3, renamed: "link")
  static var Link: NSTextCheckingType { get }
  static var quote: NSTextCheckingType { get }
  @available(swift, obsoleted: 3, renamed: "quote")
  static var Quote: NSTextCheckingType { get }
  static var dash: NSTextCheckingType { get }
  @available(swift, obsoleted: 3, renamed: "dash")
  static var Dash: NSTextCheckingType { get }
  static var replacement: NSTextCheckingType { get }
  @available(swift, obsoleted: 3, renamed: "replacement")
  static var Replacement: NSTextCheckingType { get }
  static var correction: NSTextCheckingType { get }
  @available(swift, obsoleted: 3, renamed: "correction")
  static var Correction: NSTextCheckingType { get }
  @available(iOS 4.0, *)
  static var regularExpression: NSTextCheckingType { get }
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 3, renamed: "regularExpression")
  static var RegularExpression: NSTextCheckingType { get }
  @available(iOS 4.0, *)
  static var phoneNumber: NSTextCheckingType { get }
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 3, renamed: "phoneNumber")
  static var PhoneNumber: NSTextCheckingType { get }
  @available(iOS 4.0, *)
  static var transitInformation: NSTextCheckingType { get }
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 3, renamed: "transitInformation")
  static var TransitInformation: NSTextCheckingType { get }
}
typealias NSTextCheckingTypes = UInt64
var NSTextCheckingAllSystemTypes: NSTextCheckingTypes { get }
var NSTextCheckingAllCustomTypes: NSTextCheckingTypes { get }
var NSTextCheckingAllTypes: NSTextCheckingTypes { get }
struct NSTextCheckingKey : _ObjectiveCBridgeable, Hashable, Equatable, _SwiftNewtypeWrapper, RawRepresentable, @unchecked Sendable {
  init(_ rawValue: String)
  init(rawValue: String)
  var _rawValue: NSString
  var rawValue: String { get }
  typealias RawValue = String
  typealias _ObjectiveCType = NSString
}
@available(iOS 4.0, *)
class NSTextCheckingResult : NSObject, NSCopying, NSSecureCoding {
  var resultType: UInt64 { get }
  var range: NSRange { get }
  init()
  @available(iOS 4.0, *)
  class var supportsSecureCoding: Bool { get }
  @available(iOS 4.0, *)
  func copy(with zone: NSZone? = nil) -> Any
  @available(iOS 4.0, *)
  func encode(with coder: NSCoder)
  init?(coder: NSCoder)
}
extension NSTextCheckingResult {
  @NSCopying var orthography: NSOrthography? { get }
  var grammarDetails: [[String : Any]]? { get }
  var date: Date? { get }
  var timeZone: TimeZone? { get }
  var duration: TimeInterval { get }
  @available(iOS 4.0, *)
  var components: [NSTextCheckingKey : String]? { get }
  var url: URL? { get }
  @available(swift, obsoleted: 3, renamed: "url")
  var URL: URL? { get }
  var replacementString: String? { get }
  @available(iOS 7.0, *)
  var alternativeStrings: [String]? { get }
  @available(iOS 4.0, *)
  @NSCopying var regularExpression: NSRegularExpression? { get }
  @available(iOS 4.0, *)
  var phoneNumber: String? { get }
  @available(iOS 4.0, *)
  var numberOfRanges: Int { get }
  @available(iOS 4.0, *)
  func range(at idx: Int) -> NSRange
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 4, renamed: "range(at:)")
  func rangeAt(_ idx: Int) -> NSRange
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 3, renamed: "range(at:)")
  func rangeAtIndex(_ idx: Int) -> NSRange
  @available(iOS 11.0, *)
  func range(withName name: String) -> NSRange
  @available(iOS 11.0, *)
  @available(swift, obsoleted: 3, renamed: "range(withName:)")
  func rangeWithName(_ name: String) -> NSRange
  @available(iOS 5.0, *)
  func adjustingRanges(offset: Int) -> NSTextCheckingResult
  @available(iOS 5.0, *)
  @available(swift, obsoleted: 4, renamed: "adjustingRanges(offset:)")
  func resultByAdjustingRangesWithOffset(_ offset: Int) -> NSTextCheckingResult
  var addressComponents: [NSTextCheckingKey : String]? { get }
}
@available(iOS 4.0, *)
@available(swift, obsoleted: 3, renamed: "NSTextCheckingKey.name")
let NSTextCheckingNameKey: NSTextCheckingKey
extension NSTextCheckingKey {
  @available(iOS 4.0, *)
  static let name: NSTextCheckingKey
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 4, renamed: "NSTextCheckingKey.name")
  static let NSTextCheckingNameKey: NSTextCheckingKey
  @available(iOS 4.0, *)
  static let jobTitle: NSTextCheckingKey
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 4, renamed: "NSTextCheckingKey.jobTitle")
  static let NSTextCheckingJobTitleKey: NSTextCheckingKey
  @available(iOS 4.0, *)
  static let organization: NSTextCheckingKey
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 4, renamed: "NSTextCheckingKey.organization")
  static let NSTextCheckingOrganizationKey: NSTextCheckingKey
  @available(iOS 4.0, *)
  static let street: NSTextCheckingKey
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 4, renamed: "NSTextCheckingKey.street")
  static let NSTextCheckingStreetKey: NSTextCheckingKey
  @available(iOS 4.0, *)
  static let city: NSTextCheckingKey
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 4, renamed: "NSTextCheckingKey.city")
  static let NSTextCheckingCityKey: NSTextCheckingKey
  @available(iOS 4.0, *)
  static let state: NSTextCheckingKey
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 4, renamed: "NSTextCheckingKey.state")
  static let NSTextCheckingStateKey: NSTextCheckingKey
  @available(iOS 4.0, *)
  static let zip: NSTextCheckingKey
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 4, renamed: "NSTextCheckingKey.zip")
  static let NSTextCheckingZIPKey: NSTextCheckingKey
  @available(iOS 4.0, *)
  static let country: NSTextCheckingKey
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 4, renamed: "NSTextCheckingKey.country")
  static let NSTextCheckingCountryKey: NSTextCheckingKey
  @available(iOS 4.0, *)
  static let phone: NSTextCheckingKey
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 4, renamed: "NSTextCheckingKey.phone")
  static let NSTextCheckingPhoneKey: NSTextCheckingKey
  @available(iOS 4.0, *)
  static let airline: NSTextCheckingKey
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 4, renamed: "NSTextCheckingKey.airline")
  static let NSTextCheckingAirlineKey: NSTextCheckingKey
  @available(iOS 4.0, *)
  static let flight: NSTextCheckingKey
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 4, renamed: "NSTextCheckingKey.flight")
  static let NSTextCheckingFlightKey: NSTextCheckingKey
}
@available(iOS 4.0, *)
@available(swift, obsoleted: 3, renamed: "NSTextCheckingKey.jobTitle")
let NSTextCheckingJobTitleKey: NSTextCheckingKey
@available(iOS 4.0, *)
@available(swift, obsoleted: 3, renamed: "NSTextCheckingKey.organization")
let NSTextCheckingOrganizationKey: NSTextCheckingKey
@available(iOS 4.0, *)
@available(swift, obsoleted: 3, renamed: "NSTextCheckingKey.street")
let NSTextCheckingStreetKey: NSTextCheckingKey
@available(iOS 4.0, *)
@available(swift, obsoleted: 3, renamed: "NSTextCheckingKey.city")
let NSTextCheckingCityKey: NSTextCheckingKey
@available(iOS 4.0, *)
@available(swift, obsoleted: 3, renamed: "NSTextCheckingKey.state")
let NSTextCheckingStateKey: NSTextCheckingKey
@available(iOS 4.0, *)
@available(swift, obsoleted: 3, renamed: "NSTextCheckingKey.zip")
let NSTextCheckingZIPKey: NSTextCheckingKey
@available(iOS 4.0, *)
@available(swift, obsoleted: 3, renamed: "NSTextCheckingKey.country")
let NSTextCheckingCountryKey: NSTextCheckingKey
@available(iOS 4.0, *)
@available(swift, obsoleted: 3, renamed: "NSTextCheckingKey.phone")
let NSTextCheckingPhoneKey: NSTextCheckingKey
@available(iOS 4.0, *)
@available(swift, obsoleted: 3, renamed: "NSTextCheckingKey.airline")
let NSTextCheckingAirlineKey: NSTextCheckingKey
@available(iOS 4.0, *)
@available(swift, obsoleted: 3, renamed: "NSTextCheckingKey.flight")
let NSTextCheckingFlightKey: NSTextCheckingKey
extension NSTextCheckingResult {
  class func orthographyCheckingResult(range: NSRange, orthography: NSOrthography) -> NSTextCheckingResult
  @available(swift, obsoleted: 3, renamed: "orthographyCheckingResult(range:orthography:)")
  class func orthographyCheckingResultWithRange(_ range: NSRange, orthography: NSOrthography) -> NSTextCheckingResult
  class func spellCheckingResult(range: NSRange) -> NSTextCheckingResult
  @available(swift, obsoleted: 3, renamed: "spellCheckingResult(range:)")
  class func spellCheckingResultWithRange(_ range: NSRange) -> NSTextCheckingResult
  class func grammarCheckingResult(range: NSRange, details: [[String : Any]]) -> NSTextCheckingResult
  @available(swift, obsoleted: 3, renamed: "grammarCheckingResult(range:details:)")
  class func grammarCheckingResultWithRange(_ range: NSRange, details: [[String : Any]]) -> NSTextCheckingResult
  class func dateCheckingResult(range: NSRange, date: Date) -> NSTextCheckingResult
  @available(swift, obsoleted: 3, renamed: "dateCheckingResult(range:date:)")
  class func dateCheckingResultWithRange(_ range: NSRange, date: Date) -> NSTextCheckingResult
  class func dateCheckingResult(range: NSRange, date: Date, timeZone: TimeZone, duration: TimeInterval) -> NSTextCheckingResult
  @available(swift, obsoleted: 3, renamed: "dateCheckingResult(range:date:timeZone:duration:)")
  class func dateCheckingResultWithRange(_ range: NSRange, date: Date, timeZone: TimeZone, duration: TimeInterval) -> NSTextCheckingResult
  class func addressCheckingResult(range: NSRange, components: [NSTextCheckingKey : String]) -> NSTextCheckingResult
  @available(swift, obsoleted: 3, renamed: "addressCheckingResult(range:components:)")
  class func addressCheckingResultWithRange(_ range: NSRange, components: [NSTextCheckingKey : String]) -> NSTextCheckingResult
  class func linkCheckingResult(range: NSRange, url: URL) -> NSTextCheckingResult
  @available(swift, obsoleted: 3, renamed: "linkCheckingResult(range:url:)")
  class func linkCheckingResultWithRange(_ range: NSRange, URL url: URL) -> NSTextCheckingResult
  class func quoteCheckingResult(range: NSRange, replacementString: String) -> NSTextCheckingResult
  @available(swift, obsoleted: 3, renamed: "quoteCheckingResult(range:replacementString:)")
  class func quoteCheckingResultWithRange(_ range: NSRange, replacementString: String) -> NSTextCheckingResult
  class func dashCheckingResult(range: NSRange, replacementString: String) -> NSTextCheckingResult
  @available(swift, obsoleted: 3, renamed: "dashCheckingResult(range:replacementString:)")
  class func dashCheckingResultWithRange(_ range: NSRange, replacementString: String) -> NSTextCheckingResult
  class func replacementCheckingResult(range: NSRange, replacementString: String) -> NSTextCheckingResult
  @available(swift, obsoleted: 3, renamed: "replacementCheckingResult(range:replacementString:)")
  class func replacementCheckingResultWithRange(_ range: NSRange, replacementString: String) -> NSTextCheckingResult
  class func correctionCheckingResult(range: NSRange, replacementString: String) -> NSTextCheckingResult
  @available(swift, obsoleted: 3, renamed: "correctionCheckingResult(range:replacementString:)")
  class func correctionCheckingResultWithRange(_ range: NSRange, replacementString: String) -> NSTextCheckingResult
  @available(iOS 7.0, *)
  class func correctionCheckingResult(range: NSRange, replacementString: String, alternativeStrings: [String]) -> NSTextCheckingResult
  @available(iOS 7.0, *)
  @available(swift, obsoleted: 3, renamed: "correctionCheckingResult(range:replacementString:alternativeStrings:)")
  class func correctionCheckingResultWithRange(_ range: NSRange, replacementString: String, alternativeStrings: [String]) -> NSTextCheckingResult
  @available(iOS 4.0, *)
  class func regularExpressionCheckingResult(ranges: NSRangePointer, count: Int, regularExpression: NSRegularExpression) -> NSTextCheckingResult
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 3, renamed: "regularExpressionCheckingResult(ranges:count:regularExpression:)")
  class func regularExpressionCheckingResultWithRanges(_ ranges: NSRangePointer, count: Int, regularExpression: NSRegularExpression) -> NSTextCheckingResult
  @available(iOS 4.0, *)
  class func phoneNumberCheckingResult(range: NSRange, phoneNumber: String) -> NSTextCheckingResult
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 3, renamed: "phoneNumberCheckingResult(range:phoneNumber:)")
  class func phoneNumberCheckingResultWithRange(_ range: NSRange, phoneNumber: String) -> NSTextCheckingResult
  @available(iOS 4.0, *)
  class func transitInformationCheckingResult(range: NSRange, components: [NSTextCheckingKey : String]) -> NSTextCheckingResult
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 3, renamed: "transitInformationCheckingResult(range:components:)")
  class func transitInformationCheckingResultWithRange(_ range: NSRange, components: [NSTextCheckingKey : String]) -> NSTextCheckingResult
}
