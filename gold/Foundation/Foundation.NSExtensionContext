@_exported import CoreFoundation

@available(iOS 8.0, *)
@_nonSendable(_assumed) class NSExtensionContext : NSObject {
  var inputItems: [Any] { get }
  func completeRequest(returningItems items: [Any]?, completionHandler: (@Sendable (Bool) -> Void)? = nil)
  @available(swift, obsoleted: 3, renamed: "completeRequest(returningItems:completionHandler:)")
  func completeRequestReturningItems(_ items: [Any]?, completionHandler: (@Sendable (Bool) -> Void)? = nil)
  func cancelRequest(withError error: Error)
  @available(swift, obsoleted: 3, renamed: "cancelRequest(withError:)")
  func cancelRequestWithError(_ error: Error)
  func open(_ URL: URL, completionHandler: (@Sendable (Bool) -> Void)? = nil)
  func open(_ URL: URL) async -> Bool
  @available(swift, obsoleted: 3, renamed: "open(_:completionHandler:)")
  func openURL(_ URL: URL, completionHandler: (@Sendable (Bool) -> Void)? = nil)
  init()
}

@available(*, unavailable)
extension NSExtensionContext : @unchecked Sendable {
}
@available(iOS 8.0, *)
let NSExtensionItemsAndErrorsKey: String
@available(iOS 8.2, *)
let NSExtensionHostWillEnterForegroundNotification: String
@available(iOS 8.2, *)
let NSExtensionHostDidEnterBackgroundNotification: String
@available(iOS 8.2, *)
let NSExtensionHostWillResignActiveNotification: String
@available(iOS 8.2, *)
let NSExtensionHostDidBecomeActiveNotification: String
