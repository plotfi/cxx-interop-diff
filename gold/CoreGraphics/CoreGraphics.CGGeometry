
@available(iOS 2.0, *)
let CGPointZero: CGPoint
@available(iOS 2.0, *)
let CGSizeZero: CGSize
@available(iOS 2.0, *)
let CGRectZero: CGRect
@available(iOS 2.0, *)
let CGRectNull: CGRect
@available(iOS 2.0, *)
let CGRectInfinite: CGRect
@available(iOS 2.0, *)
func CGRectGetMinX(_ rect: CGRect) -> CGFloat
@available(iOS 2.0, *)
func CGRectGetMidX(_ rect: CGRect) -> CGFloat
@available(iOS 2.0, *)
func CGRectGetMaxX(_ rect: CGRect) -> CGFloat
@available(iOS 2.0, *)
func CGRectGetMinY(_ rect: CGRect) -> CGFloat
@available(iOS 2.0, *)
func CGRectGetMidY(_ rect: CGRect) -> CGFloat
@available(iOS 2.0, *)
func CGRectGetMaxY(_ rect: CGRect) -> CGFloat
@available(iOS 2.0, *)
func CGRectGetWidth(_ rect: CGRect) -> CGFloat
@available(iOS 2.0, *)
func CGRectGetHeight(_ rect: CGRect) -> CGFloat
@available(iOS 2.0, *)
func CGPointEqualToPoint(_ point1: CGPoint, _ point2: CGPoint) -> Bool
@available(iOS 2.0, *)
func CGSizeEqualToSize(_ size1: CGSize, _ size2: CGSize) -> Bool
@available(iOS 2.0, *)
func CGRectEqualToRect(_ rect1: CGRect, _ rect2: CGRect) -> Bool
@available(iOS 2.0, *)
func CGRectStandardize(_ rect: CGRect) -> CGRect
@available(iOS 2.0, *)
func CGRectIsEmpty(_ rect: CGRect) -> Bool
@available(iOS 2.0, *)
func CGRectIsNull(_ rect: CGRect) -> Bool
@available(iOS 2.0, *)
func CGRectIsInfinite(_ rect: CGRect) -> Bool
@available(iOS 2.0, *)
func CGRectInset(_ rect: CGRect, _ dx: CGFloat, _ dy: CGFloat) -> CGRect
@available(iOS 2.0, *)
func CGRectIntegral(_ rect: CGRect) -> CGRect
@available(iOS 2.0, *)
func CGRectUnion(_ r1: CGRect, _ r2: CGRect) -> CGRect
@available(iOS 2.0, *)
func CGRectIntersection(_ r1: CGRect, _ r2: CGRect) -> CGRect
@available(iOS 2.0, *)
func CGRectOffset(_ rect: CGRect, _ dx: CGFloat, _ dy: CGFloat) -> CGRect
@available(iOS 2.0, *)
func __CGRectDivide(_ rect: CGRect, _ slice: UnsafeMutablePointer<CGRect>, _ remainder: UnsafeMutablePointer<CGRect>, _ amount: CGFloat, _ edge: CGRectEdge)
@available(iOS 2.0, *)
func CGRectContainsPoint(_ rect: CGRect, _ point: CGPoint) -> Bool
@available(iOS 2.0, *)
func CGRectContainsRect(_ rect1: CGRect, _ rect2: CGRect) -> Bool
@available(iOS 2.0, *)
func CGRectIntersectsRect(_ rect1: CGRect, _ rect2: CGRect) -> Bool

/*** Persistent representations. ***/
@available(iOS 2.0, *)
func CGPointCreateDictionaryRepresentation(_ point: CGPoint) -> CFDictionary
@available(iOS 2.0, *)
func CGPointMakeWithDictionaryRepresentation(_ dict: CFDictionary, _ point: UnsafeMutablePointer<CGPoint>) -> Bool
@available(iOS 2.0, *)
func CGSizeCreateDictionaryRepresentation(_ size: CGSize) -> CFDictionary
@available(iOS 2.0, *)
func CGSizeMakeWithDictionaryRepresentation(_ dict: CFDictionary, _ size: UnsafeMutablePointer<CGSize>) -> Bool
@available(iOS 2.0, *)
func CGRectCreateDictionaryRepresentation(_: CGRect) -> CFDictionary
@available(iOS 2.0, *)
func CGRectMakeWithDictionaryRepresentation(_ dict: CFDictionary, _ rect: UnsafeMutablePointer<CGRect>) -> Bool

/*** Definitions of inline functions. ***/
func CGPointMake(_ x: CGFloat, _ y: CGFloat) -> CGPoint
func CGSizeMake(_ width: CGFloat, _ height: CGFloat) -> CGSize
func CGVectorMake(_ dx: CGFloat, _ dy: CGFloat) -> CGVector
func CGRectMake(_ x: CGFloat, _ y: CGFloat, _ width: CGFloat, _ height: CGFloat) -> CGRect
func __CGPointEqualToPoint(_ point1: CGPoint, _ point2: CGPoint) -> Bool
func __CGSizeEqualToSize(_ size1: CGSize, _ size2: CGSize) -> Bool
